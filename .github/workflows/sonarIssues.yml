name: Build
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Check SonarQube Quality Gate
        run: |
          RESPONSE=$(curl -s -u "${{ secrets.SONAR_TOKEN }}:" \
            "https://sonarcloud.io/api/qualitygates/project_status?projectKey=nithishpk_github-workflow-learning")
          echo "SonarQube API response: $RESPONSE"
          STATUS=$(echo "$RESPONSE" | jq -r .projectStatus.status)
          echo "SonarQube Quality Gate Status: $STATUS"
          if [ "$STATUS" != "OK" ]; then
            echo "Quality gate failed!"
            exit 1
          fi
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Setup SSH Key
        run: |
          # Create SSH directory
          mkdir -p ~/.ssh
          
          # Decode and save SSH key
          echo "${{ secrets.LIGHTSAIL_SSH_KEY_B64 }}" | base64 --decode > ~/.ssh/thinkify.pem
          
          # Set correct permissions
          chmod 600 ~/.ssh/thinkify.pem
          
          # Add host to known_hosts to avoid host key verification
          ssh-keyscan -H 35.154.159.94 >> ~/.ssh/known_hosts
          
          # Verify key format (optional debug step)
          echo "SSH key first line:"
          head -n 1 ~/.ssh/thinkify.pem

      - name: SSH and Deploy
        run: |
          ssh -i ~/.ssh/thinkify.pem ubuntu@35.154.159.94 \
            'sudo bash -c "cd /home/thinkif-schoolerp/htdocs/schoolerp.thinkif.in/ && echo \"Deployment successful at $(date)\" > deployment.log"'

      - name: Notify Discord (Failure)
        if: failure()
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          content: "Hey ${{ github.actor }}"
          title: "deploy"
          description: "‚ùå Deployment failed for PR #${{ github.event.pull_request.number || 'N/A' }}. Please check the workflow for errors: ${{ github.event.pull_request.html_url || github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          image: ${{ secrets.EMBED_IMAGE }}
          color: 0xff0000  # Red for failure
          url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          username: "Code Monkey Bot üêí"

      - name: Notify Discord (Success)
        if: success()
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          content: "Hey ${{ github.actor }}"
          title: "deploy"
          description: "‚úÖ Deployment successful for PR #${{ github.event.pull_request.number || 'N/A' }}. See details: ${{ github.event.pull_request.html_url || github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          image: ${{ secrets.EMBED_IMAGE }}
          color: 0x00ff00  # Green for success
          url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          username: "Code Monkey Bot üêí"