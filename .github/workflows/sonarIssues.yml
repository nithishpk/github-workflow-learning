name: Build
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Check SonarQube Quality Gate
        run: |
          RESPONSE=$(curl -s -u "${{ secrets.SONAR_TOKEN }}:" \
            "https://sonarcloud.io/api/qualitygates/project_status?projectKey=nithishpk_github-workflow-learning")
          echo "SonarQube API response: $RESPONSE"
          STATUS=$(echo "$RESPONSE" | jq -r .projectStatus.status)
          echo "SonarQube Quality Gate Status: $STATUS"
          if [ "$STATUS" != "OK" ]; then
            echo "Quality gate failed!"
            exit 1
          fi
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Method 1: Using SSH Action (Recommended)
      - name: Setup SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.THINKIFY_PEM_KEY }}
          known_hosts: 35.154.159.94

      - name: Deploy to Lightsail
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@35.154.159.94 << 'EOF'
            cd /home/thinkif-schoolerp/htdocs/schoolerp.thinkif.in/
            sudo bash -c 'echo "Deployment successful at $(date)" > deployment.log'
            echo "Deployment completed successfully"
          EOF

      # Alternative Method 2: Manual SSH Setup (if SSH action doesn't work)
      # Uncomment this section and comment out the SSH action above if needed
      # - name: Manual SSH Setup
      #   run: |
      #     mkdir -p ~/.ssh
      #     echo "${{ secrets.LIGHTSAIL_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
      #     chmod 600 ~/.ssh/id_rsa
      #     ssh-keyscan -H ${{ secrets.LIGHTSAIL_HOST }} >> ~/.ssh/known_hosts
      #     
      # - name: Deploy with Manual SSH
      #   run: |
      #     ssh ubuntu@${{ secrets.LIGHTSAIL_HOST }} << 'EOF'
      #       cd /home/thinkif-schoolerp/htdocs/schoolerp.thinkif.in/
      #       sudo bash -c 'echo "Deployment successful at $(date)" > deployment.log'
      #       echo "Deployment completed successfully"
      #     EOF

      - name: Notify Discord (Failure)
        if: failure()
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          content: "Hey ${{ github.actor }}"
          title: "deploy"
          description: "‚ùå Deployment failed for commit ${{ github.sha }}. Please check the workflow for errors: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          image: ${{ secrets.EMBED_IMAGE }}
          color: 0xff0000  # Red for failure
          url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          username: "Code Monkey Bot üêí"

      - name: Notify Discord (Success)
        if: success()
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          content: "Hey ${{ github.actor }}"
          title: "deploy"
          description: "‚úÖ Deployment successful for commit ${{ github.sha }}. Server updated successfully!"
          image: ${{ secrets.EMBED_IMAGE }}
          color: 0x00ff00  # Green for success
          url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          username: "Code Monkey Bot üêí"