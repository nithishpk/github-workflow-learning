name: react code deployemnt 
# on: [push,workflow_dispatch] 
on: 
 push:
    branches:
        - main  # Trigger on pushes to the main branch
    paths-ignore:
        # - .github/workflows/*  # Ignore changes to this workflow file
 workflow_dispatch:  # Allow manual triggering of the workflow  
jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
            - name: Install Node.js
              uses: actions/setup-node@v4
              with:
                node-version: '20'  # Specify the Node.js version you want to use
            - name: check installed version 
              run: |
                    echo "checking node version"
                    node --version
                    echo "checking npm version"
                    npm --version
            - name: cache dependencies
              uses: actions/cache@v4
              with: 
                path: ~/.npm
                key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
            
            - name: Install dependencies
              run: |
                  echo "installing dependencies"
                  npm ci
                  echo "done installing dependencies"
            - name: run tests
              run: |
                  echo "running tests"
                  npm run test
                  echo "done running tests"
    build:
        runs-on: ubuntu-latest
        needs: test
        steps:
            - name: get code
              uses: actions/checkout@v4
            - name: install node.js
              uses: actions/setup-node@v4
              with:
                node-version: '20'  
            - name: cache dependencies
              uses: actions/cache@v4
              with:
                 path: ~/.npm
                 key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
            - name: install dependecnices
              run: |
                  echo "installing dependencies"
                  npm ci
                  echo "installed dependencies"
            - name: Clean dist directory
              run: rm -rf dist
            - name: build code 
              run: |
                  echo "building code"
                  npm run build
                  echo "done building code"   
                  
            - name: upload artifact
              uses: actions/upload-artifact@v4
              with:
                name: github-pages
                path: dist
    deploy:
        needs: build
        runs-on: ubuntu-latest
        permissions:
            pages: write      # to deploy to Pages
            id-token: write
         # Deploy to the github-pages environment
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        steps:
            - name: donwload artifact
              uses: actions/download-artifact@v4
              with:
                name: github-pages 
            - name: deploy to github pages
              id: deployment
              # This action deploys the contents of the dist directory to GitHub Pages
              # It requires the repository to be configured for GitHub Pages
              # and the Pages source to be set to "Deploy from a branch" with the branch set to `gh-pages` or `main` and the folder set to `/ (root)` or `/dist`
              # If you want to deploy from a different branch or folder, you can specify it in the `with` section
              # For example, if you want to deploy from the `gh-pages` branch and the `dist` folder, you can use:
              # uses: actions/deploy-pages@v4
              # with:
              #   branch: gh-pages
              #   folder: dist
              # If you want to deploy to a custom domain, you can specify it in the `with` section
              # For example, if you want to deploy to `example.com`, you can use:
              # uses: actions/deploy-pages@v4
              # with:
              #   custom-domain: example.com
              # If you want to deploy to a specific GitHub Pages environment, you can specify it
              # in the `with` section
              # For example, if you want to deploy to the `production` environment, you can use:
              # uses: actions/deploy-pages@v4
              # with:           
              uses: actions/deploy-pages@v4
              with: 
                token: ${{ secrets.GITHUB_TOKEN }}  # This token is automatically provided by GitHub Actions
          
              
            
                
        #old way to checkout code
        # steps:
            # - name: pull code 
            #   run: |
            #       echo "cloning git repo"
            #       echo "git hub action reserve keyword ${{ toJson(github) }}  }}"
            #       git clone https://github.com/${{ github.repository }}.git 
            #       echo "done cloning"
